{
  "permissions": {
    "allow": [
      "Bash(curl:*)",
      "Bash(lsof:*)",
      "Bash(python3:*)",
      "Bash(chmod:*)",
      "Bash(pip3 install:*)",
      "Bash(/Users/MAC/Documents/projects/caia/knowledge-system/scripts/cks-realtime-control.sh install:*)",
      "Bash(/Users/MAC/Documents/projects/caia/knowledge-system/scripts/cks-realtime-control.sh start:*)",
      "Bash(/Users/MAC/.claude/cks-integration/middleware.sh test:*)",
      "Bash(/Users/MAC/.claude/cks-integration/middleware.sh status:*)",
      "Bash(sqlite3:*)",
      "Read(/private/tmp/**)",
      "Read(/private/tmp/**)",
      "Bash(grep:*)",
      "Read(/private/tmp/**)",
      "Bash(for PORT in 5555 5002 5003 5000)",
      "Bash(do)",
      "Bash(echo:*)",
      "Bash(/dev/null)",
      "Bash(then)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(__NEW_LINE__ echo -e \"\\n3. Decision Memory:\")",
      "Bash(__NEW_LINE__ echo -e \"\\n4. Pattern Recognition:\")",
      "Bash(do echo \"Checking port $PORT...\")",
      "Bash(bash:*)",
      "Bash(/Users/MAC/Documents/projects/caia/knowledge-system/scripts/setup_test_evolution.sh:*)",
      "Bash(/Users/MAC/.claude/cks_test_triggers.sh \"cks health check\")",
      "Bash(/Users/MAC/Documents/projects/caia/knowledge-system/scripts/start_cks_monitor.sh:*)",
      "Bash(/Users/MAC/Documents/projects/caia/knowledge-system/scripts/cks_evolution_manager.sh:*)",
      "Bash(./scripts/run_integration_test.sh:*)",
      "Bash(for:*)",
      "Bash(do echo \"Testing $dir...\")",
      "Bash(sed:*)",
      "Bash(/Users/MAC/Documents/projects/caia/knowledge-system/scripts/deploy_cils.sh:*)",
      "Bash(/Users/MAC/Documents/projects/caia/knowledge-system/TEST_EVERYTHING.sh)",
      "Bash(/Users/MAC/Documents/projects/caia/knowledge-system/scripts/comprehensive_system_test.sh)",
      "Bash(/Users/MAC/Documents/projects/caia/knowledge-system/scripts/quick_test.sh:*)",
      "Bash(./scripts/comprehensive_system_test.sh:*)",
      "Bash(/Users/MAC/Documents/projects/caia/knowledge-system/scripts/repair_system.sh:*)",
      "Bash(./scripts/quick_test.sh:*)",
      "Bash(mkdir:*)",
      "Bash(ln:*)",
      "Bash(if [ -f scripts/comprehensive_system_test.sh ])",
      "Bash(then echo \"Running comprehensive system test...\")",
      "Bash(else echo \"Comprehensive test script not found, checking alternatives...\")",
      "Bash(pkill:*)",
      "Bash(tree:*)",
      "Bash(/Users/MAC/Documents/projects/caia/caia/scripts/comprehensive_project_test.sh:*)",
      "Bash(do if [ -d \"$dir\" ])",
      "Bash(else echo \"⚠️ $dir doesn''t exist\")",
      "Bash(do echo -e \"\\n$dir:\")",
      "Bash(/tmp/consolidate_cc_orchestrator.sh:*)",
      "Bash(npm test)",
      "Bash(git restore:*)",
      "Bash(node:*)",
      "Bash(npm run build:*)",
      "Bash(find:*)",
      "Bash(cat:*)",
      "Bash(if [ -f \"$pkg/README.md\" ])",
      "Bash(head:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm run:*)",
      "Bash(/tmp/create_unified_agents.sh:*)",
      "Bash(/tmp/migrate_agents.sh:*)",
      "Bash(/tmp/create_unified_utils.sh:*)",
      "Bash(/tmp/create_unified_tools.sh:*)",
      "Bash(/tmp/delete_migrated_packages.sh:*)",
      "Bash(/tmp/update_imports.sh:*)",
      "Bash(/tmp/update_imports_fixed.sh:*)",
      "Bash(./knowledge-system/scripts/comprehensive_system_test.sh:*)",
      "Bash(/Users/MAC/Documents/projects/.claude/verify-setup.sh:*)",
      "Bash(./test-auto-approval.sh:*)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/MAC/.claude",
      "/Users/MAC/.config",
      "/Users/MAC/Library",
      "/Users/MAC",
      "/tmp"
    ]
  }
}